generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["main_auth", "phones", "support"]
}

model User {
  id            String    @id
  name          String
  email         String    @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  accounts      Account[]
  sessions      Session[]

  @@map("user")
  @@schema("main_auth")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
  @@schema("main_auth")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
  @@schema("main_auth")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt

  @@map("verification")
  @@schema("main_auth")
}

model phone_model {
  id         String   @id @default(cuid())
  brand      String
  model      String
  color      String?  @default("")
  sku        String?
  storage_gb Int?
  devices    device[]

  @@unique([brand, model, storage_gb, color])
  @@map("phone_model")
  @@schema("phones")
}

model distributor {
  id        String     @id @default(cuid())
  name      String     @unique
  devices   device[]
  purchases purchase[]

  @@map("distributor")
  @@schema("phones")
}

model purchase {
  id             String      @id @default(cuid())
  currency       String      @default("ARS")
  distributor_id String
  invoice_number String?
  purchased_at   DateTime    @default(now())
  devices        device[]
  distributor    distributor @relation(fields: [distributor_id], references: [id], onDelete: Cascade)

  @@index([distributor_id])
  @@map("purchase")
  @@schema("phones")
}

model device {
  id             String        @id @default(cuid())
  imei           String        @unique
  assigned_to    String?
  created_at     DateTime      @default(now())
  distributor_id String?
  model_id       String
  purchase_id    String?
  ticket_id      String?
  updated_at     DateTime      @updatedAt
  status         device_status @default(NEW)
  assignments    assignment[]
  distributor    distributor?  @relation(fields: [distributor_id], references: [id])
  model          phone_model   @relation(fields: [model_id], references: [id], onDelete: SetDefault)
  purchase       purchase?     @relation(fields: [purchase_id], references: [id])

  @@index([model_id])
  @@index([status])
  @@index([assigned_to])
  @@index([ticket_id])
  @@map("device")
  @@schema("phones")
}

model assignment {
  id          String          @id @default(cuid())
  at          DateTime        @default(now())
  assigned_to String?
  device_id   String
  ticket_id   String?
  type        assignment_type
  device      device          @relation(fields: [device_id], references: [id], onDelete: Cascade)

  @@index([device_id, at])
  @@map("assignment")
  @@schema("phones")
}

model soti_device {
  id                    String    @id @default(cuid())
  device_name           String    @unique
  assigned_user         String?
  model                 String?
  imei                  String    @unique
  route                 String?
  registration_time     String?
  enrollment_time       String?
  connection_date       String?
  disconnection_date    String?
  phone                 String?
  bssid_network         String?
  ssid_network          String?
  jira_ticket_id        String?
  custom_phone          String?
  custom_email          String?
  android_enter_email   String?
  location              String?
  is_active             Boolean   @default(true)
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt
  last_sync             DateTime  @default(now())

  @@index([imei])
  @@index([device_name])
  @@index([assigned_user])
  @@index([is_active])
  @@map("soti_device")
  @@schema("phones")
}

model incident {
  id          String               @id @default(cuid())
  name        String
  type        String
  description String?
  created_at  DateTime             @default(now())
  updated_at  DateTime             @updatedAt
  procedures  incident_procedure[]

  @@map("incident")
  @@schema("support")
}

model procedure {
  id         String               @id @default(cuid())
  title      String
  content    String
  created_at DateTime             @default(now())
  updated_at DateTime             @updatedAt
  incidents  incident_procedure[]

  @@map("procedure")
  @@schema("support")
}

model incident_procedure {
  incident_id  String
  procedure_id String
  incident     incident  @relation(fields: [incident_id], references: [id], onDelete: Cascade)
  procedure    procedure @relation(fields: [procedure_id], references: [id], onDelete: Cascade)

  @@id([incident_id, procedure_id])
  @@map("incident_procedure")
  @@schema("support")
}

enum device_status {
  NEW
  ASSIGNED
  USED
  REPAIRED
  NOT_REPAIRED
  LOST

  @@schema("phones")
}

enum assignment_type {
  ASSIGN
  UNASSIGN

  @@schema("support")
}

model ticket {
  id               String    @id @default(cuid())
  issue_type       String
  key              String    @unique
  title            String
  label            String
  enterprise       String
  created          DateTime
  updated          DateTime
  creator          String
  status           String
  category_status  String
  replacement_count Int?
  is_replacement   Boolean   @default(false)
  is_assignment    Boolean   @default(false)
  is_active        Boolean   @default(true)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  last_sync        DateTime  @default(now())

  @@index([key])
  @@index([label])
  @@index([status])
  @@index([creator])
  @@index([is_active])
  @@map("ticket")
  @@schema("phones")
}