generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  output          = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["main_auth", "phones"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]

  @@unique([email])
  @@map("user")
  @@schema("main_auth")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
  @@schema("main_auth")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
  @@schema("main_auth")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
  @@schema("main_auth")
}

enum DeviceStatus {
  IN_STOCK
  ASSIGNED
  SOLD
  RETURNED
  DAMAGED
  LOST

  @@schema("phones")
}

model PhoneModel {
  id        String  @id @default(cuid())
  brand     String
  model     String
  storageGb Int?
  color     String?
  sku       String?

  devices Device[]

  @@unique([brand, model, storageGb, color])
  @@map("phone_model")
  @@schema("phones")
}

model Distributor {
  id        String     @id @default(cuid())
  name      String     @unique
  devices   Device[]
  purchases Purchase[]

  @@map("distributor")
  @@schema("phones")
}

model Purchase {
  id            String      @id @default(cuid())
  distributorId String
  distributor   Distributor @relation(fields: [distributorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  purchasedAt   DateTime    @default(now())
  currency      String      @default("ARS")
  invoiceNumber String?

  devices Device[]

  @@index([distributorId])
  @@map("purchase")
  @@schema("phones")
}

model Device {
  id      String     @id @default(cuid())
  imei    String     @unique
  modelId String
  model   PhoneModel @relation(fields: [modelId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  distributorId String?
  distributor   Distributor? @relation(fields: [distributorId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  purchaseId String?
  purchase   Purchase? @relation(fields: [purchaseId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  status DeviceStatus @default(IN_STOCK)

  // MVP links (no FK a otros esquemas para mantenerlo simple)
  assignedTo String? // persona/usuario
  ticketId   String? // id de ticket externo

  assignments Assignment[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([modelId])
  @@index([status])
  @@index([assignedTo])
  @@index([ticketId])
  @@map("device")
  @@schema("phones")
}

model Assignment {
  id       String @id @default(cuid())
  deviceId String
  device   Device @relation(fields: [deviceId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  type       String // "ASSIGN" | "UNASSIGN"
  assignedTo String?
  ticketId   String?
  at         DateTime @default(now())

  @@index([deviceId, at])
  @@map("assignment")
  @@schema("phones")
}
